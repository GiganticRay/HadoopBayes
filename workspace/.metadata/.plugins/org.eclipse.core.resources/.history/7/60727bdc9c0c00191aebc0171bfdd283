import java.util.HashMap;
import java.util.Map;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.util.GenericOptionsParser;

import com.alibaba.fastjson.JSON;



public class NBMain
{
	public static Configuration conf = new Configuration();	// 也可用 set 方法重新设置（会覆盖）: conf.set("fs.default.name", //"hdfs"//xxxx:9000) Configuration 类： 创建时会 | 读取 Hadoop 的配置文件，如 site-core.xml...;
	public static int preciseCount = 0;						// 当前准确条数
	public static void main(String[] args) throws Exception
	{
		// region: 变量设置区
		Map<String, Integer> featureFrequency = new HashMap<String, Integer>();
		
		
		// endregion
		
		String[] otherArgs = new GenericOptionsParser(conf, args).getRemainingArgs();	// 将命令行中参数自动设置到变量 conf 中
		// region 以下为 eclopse 插件提交所添加的代码、因为之前配置的hadoopLocation 并没有完全起作用、eclipse 获取不到集群环境下的配置信息，导致提交任务是加载的配置信息为默认值
		conf.set("fs.defaultFS", "hdfs://192.168.10.100:9000");
		conf.set("hadoop.job.user", "ray");
		conf.set("mapreduce.jobtracker.address", "192.168.10.100:9001");
		conf.set("yarn.resourcemanager.hostname", "192.168.10.100");
		conf.set("yarn.resourcemanager.admin.address", "192.168.10.100:8033");
		conf.set("yarn.resourcemanager.address", "192.168.10.100:8032");
		conf.set("yarn.resourcemanager.scheduler.address", "192.168.10.100:8030");
		
		String featureFrequencyJson = JSON.toJSONString(featureFrequency);	// 序列化
		// endregion
		
		if(otherArgs.length != 2){
			System.err.println("Usage: wordcount <in><out>");
			System.exit(2);
		}
		
		BayesPredict.InitGlobalPara();		// 初始化频数全局变量
//		BayesPredict.GetFrequencyFile(args);	// 训练, 得到频数文件 eclipseOutput2
		BayesPredict.InitFrequencyMap();	// 得到频数 Global Para
		BayesPredict.Predict();				// 预测文件、并输出		输出到 eclipseOutput4
		System.out.println();
		
		
		
		
		System.out.println(preciseCount / 2000.0);

	}

}
